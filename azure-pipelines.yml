trigger:
  branches:
    include:
      - streamlabs
  tags:
    include:
      - '*'

variables:
  SLBuildDirectory: build
  SLGenerator: Visual Studio 16 2019
  SLDistributeDirectory: distribute
  FullDistributePath: $(SLBuildDirectory)/$(SLDistributeDirectory)
  RuntimeURL: https://atom.io/download/atom-shell
  RuntimeName: iojs
  RuntimeVersion: v9.3.3


jobs:
- job: 'Windows'
  pool:
    vmImage: 'windows-2019'
  workspace:
    clean: all

  steps:
  - powershell: git config --global core.autocrlf false
    displayName: 'Set Unix checkout for git'

  - checkout: self
    fetchDepth: 10

  - powershell: 'Write-Host "##vso[task.setvariable variable=tagartifact]crash-handler-$((git.exe describe --tags --abbrev=0) | Out-String)"'
    displayName: 'Get tag for artifact'

  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '10.x'

  - script: 'yarn install'
    displayName: 'Install dependencies'

  - script: 'cmake -H. -B"%SLBuildDirectory%" -G"%SLGenerator%" -A x64 -DCMAKE_INSTALL_PREFIX="%FullDistributePath%\crash-handler" -DNODEJS_NAME=%RuntimeName% -DNODEJS_URL=%RuntimeURL% -DNODEJS_VERSION=%RuntimeVersion%'
    displayName: 'Configure crash-handler'

  - script: 'node ci/bump-version.js'
    displayName: 'Bump version number'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - script: 'cmake --build %SLBuildDirectory% --target install --config RelWithDebInfo'
    displayName: 'Build crash-handler'

  - task: ArchiveFiles@2
    displayName: 'Generate artifact'
    inputs:
      rootFolderOrFile: $(FullDistributePath)
      includeRootFolder: false
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(tagartifact)-win64.tar.gz'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifact'
    inputs:
      pathtoPublish: $(Build.SourcesDirectory)\$(tagartifact)-win64.tar.gz
      artifactName: $(tagartifact)-win64.tar.gz

  # - task: S3Upload@1
  #   inputs:
  #     awsCredentials: 'SLOBS_BE_AWS'
  #     regionName: 'us-west-2'
  #     bucketName: 'slobs-crash-handler'
  #     globExpressions: '$(tagartifact)-win64.tar.gz'
  #     filesAcl: 'public-read'
  #   displayName: 'Upload tag artifact to S3'
  #   condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

- job: 'MacOSX'
  pool:
    vmImage: 'macos-10.15'
  workspace:
    clean: all

  steps:
  - powershell: git config --global core.autocrlf false
    displayName: 'Set Unix checkout for git'

  - checkout: self
    fetchDepth: 10

  - powershell: 'Write-Host "##vso[task.setvariable variable=tagartifact]crash-handler-$((git describe --tags --abbrev=0) | Out-String)"'
    displayName: 'Get tag for artifact'

  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '10.x'

  - script: 'yarn install'
    displayName: 'Install dependencies'

  - script: 'node ci/bump-version.js'
    displayName: 'Bump version number'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - script: './ci/build-osx.sh'
    displayName: 'Build crash-handler'

  - task: ArchiveFiles@2
    displayName: 'Generate artifact'
    inputs:
      rootFolderOrFile: $(FullDistributePath)
      includeRootFolder: false
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(tagartifact)-osx.tar.gz'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifact'
    inputs:
      pathtoPublish: $(Build.SourcesDirectory)/$(tagartifact)-osx.tar.gz
      artifactName: $(tagartifact)-osx.tar.gz

  # - task: S3Upload@1
  #   inputs:
  #     awsCredentials: 'SLOBS_BE_AWS'
  #     regionName: 'us-west-2'
  #     bucketName: 'slobs-crash-handler'
  #     globExpressions: '$(tagartifact)-osx.tar.gz'
  #     filesAcl: 'public-read'
  #   displayName: 'Upload tag artifact to S3'
  #   condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))
